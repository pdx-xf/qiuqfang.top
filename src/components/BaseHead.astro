---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import "../styles/global.css";

export interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description } = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<script>
  const htmlEl = document.documentElement;

  const iconToggle = document.querySelector(".icon-toggle") as HTMLElement;
  const sunIconEl = iconToggle.children[0] as HTMLElement;
  const nightIconEl = iconToggle.children[1] as HTMLElement;

  const handleToggle = () => {
    htmlEl.classList.toggle("dark");
    if (htmlEl.classList.value.includes("dark")) {
      localStorage.theme = "dark";
      sunIconEl.style.display = "inline-block";
      nightIconEl.style.display = "none";
    } else {
      localStorage.theme = "light";
      sunIconEl.style.display = "none";
      nightIconEl.style.display = "inline-block";
    }
  };

  iconToggle.addEventListener("click", handleToggle);

  if (localStorage.theme) {
    htmlEl.classList.add(localStorage.theme);
  } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    htmlEl.classList.add("dark");
    localStorage.theme = "dark";
  }
  if (htmlEl.classList.value.includes("dark")) {
    localStorage.theme = "dark";
    sunIconEl.style.display = "inline-block";
    nightIconEl.style.display = "none";
  } else {
    localStorage.theme = "light";
    sunIconEl.style.display = "none";
    nightIconEl.style.display = "inline-block";
  }
</script>
